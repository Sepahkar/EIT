# Generated by Django 5.1.6 on 2025-03-12 10:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailSendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.CharField(help_text='Jalali date', max_length=100)),
                ('user_provided_variables', models.JSONField(help_text='User provided variables in the email request')),
                ('prepared_variables', models.JSONField(help_text='Prepared variables in the email request using prepare_context()')),
                ('email_recipients', models.JSONField(help_text='JSON containing to, cc, and bcc email addresses')),
                ('email_subject', models.CharField(help_text='Rendered subject of the email', max_length=255)),
                ('email_body', models.TextField(help_text='Rendered body of the email')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('HOT_RETRY', 'Hot Retry'), ('COLD_RETRY', 'Cold Retry'), ('FAILURE', 'Failure'), ('SUCCESS', 'Success')], default='PENDING', max_length=10)),
                ('request_by', models.CharField(help_text='National ID', max_length=10)),
                ('last_attempt_at', models.DateTimeField(auto_now=True, help_text='Last attempt at')),
                ('cold_attempt_count', models.IntegerField(default=0, help_text='Number of cold attempts')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Template code should follow the convention: 3 characters project name, 3 characters app name, 4 characters unique name and it must be uppercase', max_length=10, unique=True)),
                ('subject', models.CharField(help_text='Supports Django template syntax: {{ variable }}', max_length=255)),
                ('body', models.TextField(help_text='Supports Django template syntax: {{ variable }}')),
                ('to', models.CharField(help_text='Comma-separated list of email addresses to send the email to, whitespaces will be removed', max_length=255)),
                ('cc', models.CharField(help_text='Comma-separated list of email addresses to send the email to, whitespaces will be removed', max_length=255, null=True)),
                ('bcc', models.CharField(help_text='Comma-separated list of email addresses to send the email to, whitespaces will be removed', max_length=255, null=True)),
                ('max_retries', models.IntegerField(default=3, help_text='Maximum number of retries for sending the email')),
                ('retry_delay', models.IntegerField(default=10, help_text='Delay in minutes between retries')),
            ],
        ),
        migrations.CreateModel(
            name='EmailVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.CharField(help_text='Jalali date', max_length=100)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('HOT_RETRY', 'Hot Retry'), ('COLD_RETRY', 'Cold Retry'), ('FAILURE', 'Failure'), ('SUCCESS', 'Success')], max_length=10)),
                ('error_message', models.TextField(null=True)),
                ('attempt_at', models.DateTimeField(auto_now=True, help_text='Attempt at')),
                ('email_send_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_service.emailsendrequest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='emailsendrequest',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_service.emailtemplate'),
        ),
    ]
